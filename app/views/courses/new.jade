extends ../shared/template

block content
  script(src='/js/vendor/quill.js')
  #container
    button#addlesson Add Lesson

    .clear

    #lessons
      .lesson-builder
        input(type='text', name='title', placeholder='Lesson Title')
        input(type='text', name='description', placeholder='Lesson Description')
        .quill-wrapper
          #full-toolbar.toolbar.sc-toolbar-container
            span.sc-format-group
              select.sc-font(title='Font')
                option(value='sans-serif', selected) Sans Serif
                option(value='Georgia, serif') Serif
                option(value='Monaco, "Courier New", monospace') Monospace
              select.sc-size(title='Size')
                option(value='10px') Small
                option(value='13px', selected) Normal
                option(value='18px') Large
                option(value='32px') Huge

            span.sc-format-group
              span.sc-format-button.sc-bold(title='Bold')
              span.sc-format-separator
              span.sc-format-button.sc-italic(title='Italic')
              span.sc-format-separator
              span.sc-format-button.sc-underline(title='Underline')
              span.sc-format-separator
              span.sc-format-button.sc-strike(title='Strikethrough')

            span.sc-format-group
              //span.sc-color.sc-color-picker(title='Text Color')
              select.sc-color(title='Text Color')
                option(value='rgb(255, 255, 255)')
                option(value='rgb(0, 0, 0)', selected)
                option(value='rgb(255, 0, 0)')
                option(value='rgb(0, 0, 255)')
                option(value='rgb(0, 255, 0)')
                option(value='rgb(0, 128, 128)')
                option(value='rgb(255, 0, 255)')
                option(value='rgb(255, 255, 0)')

              span.sc-format-separator
              select.sc-background(title='Background Color')
                option(value='rgb(255, 255, 255)', selected)
                option(value='rgb(0, 0, 0)')
                option(value='rgb(255, 0, 0)')
                option(value='rgb(0, 0, 255)')
                option(value='rgb(0, 255, 0)')
                option(value='rgb(0, 128, 128)')
                option(value='rgb(255, 0, 255)')
                option(value='rgb(255, 255, 0)')
              select.sc-align(title='Text Alignment')
                option(value='left', selected)
                option(value='center')
                option(value='right')
                option(value='justify')

            span.sc-format-group
              span.sc-format-button.sc-link(title='Link')
              span.sc-format-separator
              span.sc-format-button.sc-image(title='Image')
              span.sc-format-separator
              span.sc-format-button.sc-clear(title='Clear Formats') Clear
          #full-editor.editor.sc-container

    script(src='/js/es6/compiled/courses.js')
    script(type='text/javascript').
      // Initialize editor with custom theme and modules
      var fullEditor = new Quill('#full-editor', {
        modules: {
          'authorship': { enabled: true },
          'multi-cursor': true,
          'toolbar': { container: '#full-toolbar' },
          'image-tooltip': true,
          'link-tooltip': true
        },
        theme: 'snow'
      });



      //- // Add basic editor's author
      //- var authorship = fullEditor.getModule('authorship');
      //- authorship.addAuthor('gandalf', 'rgba(255,153,51,0.4)');
      //-
      //- // Add a cursor to represent basic editor's cursor
      //- var cursorManager = fullEditor.getModule('multi-cursor');
      //- cursorManager.setCursor('gandalf', fullEditor.getLength()-1, 'Gandalf', 'rgba(255,153,51,0.9)');
      //-
      //- // Sync basic editor's cursor location
      //- basicEditor.on('selection-change', function(range) {
      //-   if (range) {
      //-     cursorManager.moveCursor('gandalf', range.end);
      //-   }
      //- });
      //-
      //- // Update basic editor's content with ours
      //- fullEditor.on('text-change', function(delta, source) {
      //-   if (source === 'user') {
      //-     basicEditor.updateContents(delta);
      //-   }
      //- });
      //-
      //- // basicEditor needs authorship module to accept changes from fullEditor's authorship module
      //- basicEditor.addModule('authorship', {
      //-   authorId: 'gandalf',
      //-   color: 'rgba(255,153,51,0.4)'
      //- });
      //-
      //- // Update our content with basic editor's
      //- basicEditor.on('text-change', function(delta, source) {
      //-   if (source === 'user') {
      //-     fullEditor.updateContents(delta);
      //-   }
      //- });
